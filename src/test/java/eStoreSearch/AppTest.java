/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package eStoreSearch;

import java.util.*;

import org.junit.Test;
import static org.junit.Assert.*;

import eStoreSearch.Book;
import eStoreSearch.Electronics;
import eStoreSearch.Product;
import jdk.jfr.Timestamp;
import eStoreSearch.App;

public class AppTest {
    
   @Test 
   public void testBook(){

       Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
       var testList = new ArrayList<Book>();

       testList.add(testBook);

       assertEquals ("111111", testList.get(0).getProductID());
       assertEquals ("new book", testList.get(0).getDescription());
       assertEquals (45.45, testList.get(0).getPrice(), 0);
       assertEquals (2001, testList.get(0).getYear());
       assertEquals ("authorsList", testList.get(0).getAuthors());
       assertEquals ("avargh01", testList.get(0).getPublisher());

   }

   @Test 
   public void testDefaultBook(){

       Book testBook = new Book ();
       var testList = new ArrayList<Book>();

       testList.add(testBook);

       assertEquals ("", testList.get(0).getProductID());
       assertEquals ("", testList.get(0).getDescription());
       assertEquals (0.0, testList.get(0).getPrice(), 0);
       assertEquals (0, testList.get(0).getYear());
       assertEquals ("", testList.get(0).getAuthors());
       assertEquals ("", testList.get(0).getPublisher());

   }

   @Test
   public void testElectronic(){

        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        var testList = new ArrayList<Electronics>();

        testList.add(testElectronic);

        assertEquals ("111111", testList.get(0).getProductID());
        assertEquals ("new electronic", testList.get(0).getDescription());
        assertEquals (45.45, testList.get(0).getPrice(), 0);
        assertEquals (2001, testList.get(0).getYear());
        assertEquals ("avargh01", testList.get(0).getMaker());

    }

    @Test
   public void testDefaultElectronic(){

        Electronics testElectronic = new Electronics ();
        var testList = new ArrayList<Electronics>();

        testList.add(testElectronic);

        assertEquals ("", testList.get(0).getProductID());
        assertEquals ("", testList.get(0).getDescription());
        assertEquals (0.0, testList.get(0).getPrice(), 0);
        assertEquals (0, testList.get(0).getYear());
        assertEquals ("", testList.get(0).getMaker());

    }

    @Test
    public void testElectricGetProductID(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        String productID = testElectronic.getProductID();
        assertEquals ("111111", productID);
    }

    @Test
    public void testBookGetProductID(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        String productID = testBook.getProductID();
        assertEquals ("111111", productID);
    }

    @Test
    public void testElectricGetDescription(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        String description = testElectronic.getDescription();
        assertEquals ("new electronic", description);
    }

    @Test
    public void testBookGetDescription(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        String description = testBook.getDescription();
        assertEquals ("new book", description);
    }

    @Test
    public void testElectricGetPrice(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        double price = testElectronic.getPrice();
        assertEquals (45.45, price, 0);
    }

    @Test
    public void testBookGetPrice(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        double price = testBook.getPrice();
        assertEquals (45.45, price, 0);
    }

    @Test
    public void testElectronicGetYear(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        int year = testElectronic.getYear();
        assertEquals (2001, year);
    }

    @Test
    public void testBookGetYear(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        int year = testBook.getYear();
        assertEquals (2001, year);
    }

    @Test
    public void testElectronicGetMaker(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        String maker = testElectronic.getMaker();
        assertEquals ("avargh01", maker);
    }

    @Test
    public void testBookGetAuthors(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        String authors = testBook.getAuthors();
        assertEquals ("authorsList", authors);
    }

    @Test
    public void testBookGetPublisher(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        String publisher = testBook.getPublisher();
        assertEquals ("avargh01", publisher);
    }

    @Test
    public void testElectricSetProductID(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        testElectronic.setProductID("10000");
        assertEquals ("10000", testElectronic.getProductID());
    }

    @Test
    public void testBookSetProductID(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        testBook.setProductID("10000");
        assertEquals ("10000", testBook.getProductID());
    }

    @Test
    public void testElectricSetDescription(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        testElectronic.setDescription("electronic");
        assertEquals ("electronic", testElectronic.getDescription());
    }

    @Test
    public void testBookSetDescription(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        testBook.setDescription("book");
        assertEquals ("book", testBook.getDescription());
    }

    @Test
    public void testElectricSetPrice(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        testElectronic.setPrice(50.50);
        assertEquals (50.50, testElectronic.getPrice(), 0);
    }

    @Test
    public void testBookSetPrice(){
        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        testBook.setPrice(50.50);
        assertEquals (50.50, testBook.getPrice(), 0);
    }

    @Test
    public void testElectronicSetYear(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        testElectronic.setYear(2000);
        assertEquals (2000, testElectronic.getYear());
    }

    @Test
    public void testBookSetYear(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        testBook.setYear(2000);
        assertEquals (2000, testBook.getYear());
    }

    @Test
    public void testElectronicSetMaker(){
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        testElectronic.setMaker("avargh");
        assertEquals ("avargh", testElectronic.getMaker());
    }

    @Test
    public void testBookSetAuthors(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        testBook.setAuthors("authors");
        assertEquals ("authors", testBook.getAuthors());
    }

    @Test
    public void testBookSetPublisher(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        testBook.setPublisher("avargh");
        assertEquals ("avargh", testBook.getPublisher());
    }

    @Test
    public void testEqualsTrue(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        Electronics testElectronic = new Electronics ("111111", "new electronic",45.45, 2001, "avargh01");
        assertEquals (false, testBook.equals(testElectronic));
    }

    @Test
    public void testEqualsFalse(){

        Book testBook = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        Book testBook2 = new Book ("111111", "new book",45.45, 2001, "authorsList", "avargh01");
        assertEquals (true, testBook.equals(testBook2));
    }

    @Test
    public void testIsNum(){
        assertEquals(true, eStoreSearch.App.isNum("123456"));
    }
    @Test
    public void testIsNumFalse(){
        assertEquals(false, eStoreSearch.App.isNum("123abc"));
    }

    @Test
    public void testIsYear(){
        assertEquals(true, eStoreSearch.App.isYear("2001"));
    }

    @Test
    public void testIsYearFalse(){
        assertEquals(false, eStoreSearch.App.isYear("20003"));
    }

}